{"name":"Chipmunk++","body":"## Welcome\r\n\r\nChipmunk++ is a C++ wrapper for the [Chipmunk Physics](http://chipmunk-physics.net/) library.\r\n\r\n### Example\r\n\r\nChipmunk's Hello World example with Chipmunk++:\r\n\r\n```cpp\r\n#include <iostream>\r\n#include <iomanip>\r\n#include <chipmunk.hpp>\r\n\r\nusing namespace cp;\r\nusing namespace std;\r\n\r\nint main() {\r\n\t// cp::Vect is a 2D vector.\r\n\tVect gravity(0, -100);\r\n\r\n\t// Create an empty space.\r\n\tSpace space;\r\n\tspace.setGravity(gravity);\r\n\r\n\t// Add a static lien segment shape for ground.\r\n\t// We'll make it slightly tilted so the ball will roll off.\r\n\t// We attach it to space.staticBody to tell Chipmunk it shouldn't be movable.\r\n\tSegmentShape ground(space.staticBody, Vect(-20, 5), Vect(20, -5), 0);\r\n\tground.setFriction(1);\r\n\tspace.addShape(ground);\r\n\r\n\t// Now let's make a ball that falls onto the line and rolls off.\r\n\t// First we need to make a cp::Body to hold the physical properties of the object.\r\n\t// These include the mass, position, velocity, angle, etc. of the object.\r\n\t// Then we attach collision shapes to the cpBody to give it a size and shape.\r\n\r\n\tconst Float radius = 5;\r\n\tconst Float mass = 1;\r\n\r\n\t// The moment of inertia is like mass for rotation\r\n\t// Use the cp::momentFor*() functions to help you approximate it.\r\n\tconst Float moment = momentForCircle(mass, 0, radius);\r\n\r\n\tBody ballBody(mass, moment);\r\n\tspace.addBody(ballBody);\r\n\tballBody.setPos(Vect(0, 15));\r\n\r\n\t// Now we create the collision shape for the ball.\r\n\t// You can create multiple collision shapes that point to the same body.\r\n\t// They will all be attached to the body and move arount to follow it.\r\n\tCircleShape ballShape(ballBody, radius);\r\n\tspace.addShape(ballShape);\r\n\tballShape.setFriction(0.7);\r\n\r\n\t// Now that it's all set up, we simulate all the objects in the space by\r\n\t// stepping forward through time in small increments called steps.\r\n\t// It is *highly* recommended to use a fixed size time step.\r\n\tFloat timeStep = 1.0/60.0;\r\n\tfor (Float time = 0; time < 2; time += timeStep) {\r\n        Vect pos = ballBody.getPos();\r\n\t\tVect vel = ballBody.getVel();\r\n\t\tcout << setprecision(2) << fixed\r\n\t\t     << \"Time is \"          << setw(5) << time << \". \"\r\n\t\t     << \"ballBody is at \"   << setw(5) << pos << \". \"\r\n\t\t     << \"It's velocity is \" << setw(5) << vel << endl;\r\n\t\tspace.step(timeStep);\r\n\t}\r\n}\r\n```","tagline":"Chipmunk Physics for C++","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}